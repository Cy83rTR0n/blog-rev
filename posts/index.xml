<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Cy83rTR0n's Blog</title><link>https://Cy83rTR0n.github.io/blog-rev/posts/</link><description>Recent content in Posts on Cy83rTR0n's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 12 Mar 2023 13:55:29 +0000</lastBuildDate><atom:link href="https://Cy83rTR0n.github.io/blog-rev/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Buffer Overflow</title><link>https://Cy83rTR0n.github.io/blog-rev/posts/buffer-overflow/</link><pubDate>Sun, 12 Mar 2023 13:55:29 +0000</pubDate><guid>https://Cy83rTR0n.github.io/blog-rev/posts/buffer-overflow/</guid><description>Stack Overflows: Overwriting Return Addresses Introduction Stack overflows are a common vulnerability that allows attackers to overwrite key data structures, such as return addresses or function pointers, with malicious data. In particular, overwriting return addresses can be a powerful technique for attackers to gain control of a program&amp;rsquo;s execution flow and execute arbitrary code. In this blog post, we will explore the concept of stack overflows and how they can be used to overwrite return addresses in a greater detail.</description></item><item><title>Second Post</title><link>https://Cy83rTR0n.github.io/blog-rev/posts/second-post/</link><pubDate>Wed, 08 Mar 2023 13:36:15 +0000</pubDate><guid>https://Cy83rTR0n.github.io/blog-rev/posts/second-post/</guid><description>Cryptography: Challenge name : Baby-Crypto Write-Up:
1. Given code: from secret import FLAG lookup = {&amp;#39;A&amp;#39;:&amp;#39;aaaaa&amp;#39;, &amp;#39;B&amp;#39;:&amp;#39;aaaab&amp;#39;, &amp;#39;C&amp;#39;:&amp;#39;aaaba&amp;#39;, &amp;#39;D&amp;#39;:&amp;#39;aaabb&amp;#39;, &amp;#39;E&amp;#39;:&amp;#39;aabaa&amp;#39;, &amp;#39;F&amp;#39;:&amp;#39;aabab&amp;#39;, &amp;#39;G&amp;#39;:&amp;#39;aabba&amp;#39;, &amp;#39;H&amp;#39;:&amp;#39;aabbb&amp;#39;, &amp;#39;I&amp;#39;:&amp;#39;abaaa&amp;#39;, &amp;#39;J&amp;#39;:&amp;#39;abaab&amp;#39;, &amp;#39;K&amp;#39;:&amp;#39;ababa&amp;#39;, &amp;#39;L&amp;#39;:&amp;#39;ababb&amp;#39;, &amp;#39;M&amp;#39;:&amp;#39;abbaa&amp;#39;, &amp;#39;N&amp;#39;:&amp;#39;abbab&amp;#39;, &amp;#39;O&amp;#39;:&amp;#39;abbba&amp;#39;, &amp;#39;P&amp;#39;:&amp;#39;abbbb&amp;#39;, &amp;#39;Q&amp;#39;:&amp;#39;baaaa&amp;#39;, &amp;#39;R&amp;#39;:&amp;#39;baaab&amp;#39;, &amp;#39;S&amp;#39;:&amp;#39;baaba&amp;#39;, &amp;#39;T&amp;#39;:&amp;#39;baabb&amp;#39;, &amp;#39;U&amp;#39;:&amp;#39;babaa&amp;#39;, &amp;#39;V&amp;#39;:&amp;#39;babab&amp;#39;, &amp;#39;W&amp;#39;:&amp;#39;babba&amp;#39;, &amp;#39;X&amp;#39;:&amp;#39;babbb&amp;#39;, &amp;#39;Y&amp;#39;:&amp;#39;bbaaa&amp;#39;, &amp;#39;Z&amp;#39;:&amp;#39;bbaab&amp;#39; , &amp;#39;_&amp;#39;: &amp;#39;bbbbb&amp;#39;} def encrypt(message): cipher = &amp;#39;&amp;#39; for letter in message: if(letter != &amp;#39; &amp;#39;): cipher += lookup[letter] else: cipher += &amp;#39; &amp;#39; return cipher if __name__==&amp;#39;__main__&amp;#39;: cipher=encrypt(FLAG) print(&amp;#39;Here take your cipher text: &amp;#39;,cipher) 2.</description></item><item><title>First Post</title><link>https://Cy83rTR0n.github.io/blog-rev/posts/first-post/</link><pubDate>Wed, 08 Mar 2023 11:10:20 +0000</pubDate><guid>https://Cy83rTR0n.github.io/blog-rev/posts/first-post/</guid><description>we are given the following file # uncompyle6 version 3.7.4 # Python bytecode 2.7 (62211) # Decompiled from: Python 2.7.17 (default, Sep 30 2020, 13:38:04) # [GCC 7.5.0] # Embedded file name: reverseme.py # Compiled at: 2021-09-04 11:21:21 import numpy as np flag = &amp;#39;TamilCTF{this_one_is_a_liability_dont_fall_for_it}&amp;#39; np.random.seed(369) data = np.array([ ord(c) for c in flag ]) extra = np.random.randint(1, 5, len(flag)) product = np.multiply(data, extra) temp1 = [ x for x in data ] temp2 = [ ord(x) for x in &amp;#39;dondaVSclb&amp;#39; * 5 ] c = [ temp1[i] ^ temp2[i] for i in range(len(temp1)) ] flagdata = (&amp;#39;&amp;#39;).</description></item></channel></rss>